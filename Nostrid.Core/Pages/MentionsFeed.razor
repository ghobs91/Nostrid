@page "/feed/mention"

@using Nostrid.Data
@using Nostrid.Data.Relays;
@using Nostrid.Model;
@using System.Collections.Concurrent;
@inject AccountService accountService
@inject FeedService feedService

<h2>Mentions Feed</h2>

<div class="d-none d-md-flex pb-2">
    <NoteComposer />
</div>

<FeedViewer BaseFilter="@filter" MessageKinds="@(new[]{NostrKind.Text, NostrKind.Repost})" OnLoaded="@OnLoaded" />

@code {
    private SubscriptionFilter? filter;

    protected override void OnInitialized()
    {
        if (accountService.MainAccount == null) return;

        filter = new MentionSubscriptionFilter(accountService.MainAccount.Id);
    }

    private void OnLoaded(ConcurrentDictionary<string, Event> notesFeed)
    {
        if (notesFeed.Any())
        {
            var newestNoteDate = DateTimeOffset.FromUnixTimeSeconds(notesFeed.Max(n => n.Value.CreatedAtCurated)).UtcDateTime;
            accountService.SetLastRead(newestNoteDate);
        }
    }
}
